// Code generated by protoc-gen-go. DO NOT EDIT.
// source: drink-factory.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DrinkResponse struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DrinkResponse) Reset()         { *m = DrinkResponse{} }
func (m *DrinkResponse) String() string { return proto.CompactTextString(m) }
func (*DrinkResponse) ProtoMessage()    {}
func (*DrinkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_273e972024a334aa, []int{0}
}

func (m *DrinkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DrinkResponse.Unmarshal(m, b)
}
func (m *DrinkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DrinkResponse.Marshal(b, m, deterministic)
}
func (m *DrinkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DrinkResponse.Merge(m, src)
}
func (m *DrinkResponse) XXX_Size() int {
	return xxx_messageInfo_DrinkResponse.Size(m)
}
func (m *DrinkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DrinkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DrinkResponse proto.InternalMessageInfo

func (m *DrinkResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type DrinkReply struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price                int64    `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	Recipe               string   `protobuf:"bytes,4,opt,name=recipe,proto3" json:"recipe,omitempty"`
	Other                string   `protobuf:"bytes,5,opt,name=other,proto3" json:"other,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DrinkReply) Reset()         { *m = DrinkReply{} }
func (m *DrinkReply) String() string { return proto.CompactTextString(m) }
func (*DrinkReply) ProtoMessage()    {}
func (*DrinkReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_273e972024a334aa, []int{1}
}

func (m *DrinkReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DrinkReply.Unmarshal(m, b)
}
func (m *DrinkReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DrinkReply.Marshal(b, m, deterministic)
}
func (m *DrinkReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DrinkReply.Merge(m, src)
}
func (m *DrinkReply) XXX_Size() int {
	return xxx_messageInfo_DrinkReply.Size(m)
}
func (m *DrinkReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DrinkReply.DiscardUnknown(m)
}

var xxx_messageInfo_DrinkReply proto.InternalMessageInfo

func (m *DrinkReply) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *DrinkReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DrinkReply) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *DrinkReply) GetRecipe() string {
	if m != nil {
		return m.Recipe
	}
	return ""
}

func (m *DrinkReply) GetOther() string {
	if m != nil {
		return m.Other
	}
	return ""
}

func init() {
	proto.RegisterType((*DrinkResponse)(nil), "proto.DrinkResponse")
	proto.RegisterType((*DrinkReply)(nil), "proto.DrinkReply")
}

func init() {
	proto.RegisterFile("drink-factory.proto", fileDescriptor_273e972024a334aa)
}

var fileDescriptor_273e972024a334aa = []byte{
	// 192 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0xbd, 0x0e, 0x82, 0x30,
	0x14, 0x85, 0x45, 0x7e, 0x12, 0x6f, 0x70, 0xb0, 0x12, 0xd3, 0x38, 0x11, 0x5c, 0x58, 0x64, 0xd0,
	0xc9, 0xd5, 0x10, 0x0d, 0x2b, 0x6f, 0x80, 0xe5, 0x1a, 0x89, 0x48, 0x9b, 0xd2, 0xc1, 0xbe, 0xbd,
	0x69, 0xcb, 0x42, 0xe2, 0xd4, 0x73, 0xbe, 0x7e, 0x49, 0x7b, 0x60, 0xdb, 0xca, 0x6e, 0x78, 0x1f,
	0x9f, 0x0d, 0x53, 0x5c, 0xea, 0x42, 0x48, 0xae, 0x38, 0x09, 0xed, 0x91, 0x1d, 0x60, 0x5d, 0x9a,
	0xdb, 0x1a, 0x47, 0xc1, 0x87, 0x11, 0x09, 0x81, 0x80, 0xf1, 0x16, 0xa9, 0x97, 0x7a, 0xf9, 0xaa,
	0xb6, 0x39, 0xfb, 0x02, 0x4c, 0x92, 0xe8, 0xf5, 0x3f, 0xc3, 0xb0, 0xa1, 0xf9, 0x20, 0x5d, 0x3a,
	0x66, 0x32, 0x49, 0x20, 0x14, 0xb2, 0x63, 0x48, 0xfd, 0xd4, 0xcb, 0xfd, 0xda, 0x15, 0xb2, 0x83,
	0x48, 0x22, 0xeb, 0x04, 0xd2, 0xc0, 0xba, 0x53, 0x33, 0x36, 0x57, 0x2f, 0x94, 0x34, 0xb4, 0xd8,
	0x95, 0x53, 0x05, 0xb1, 0x7d, 0xf9, 0xe6, 0xfe, 0x4e, 0x2e, 0x10, 0xdf, 0x51, 0x59, 0x74, 0xd5,
	0x55, 0x49, 0x12, 0xb7, 0xa6, 0x98, 0x6d, 0xd8, 0x6f, 0xe6, 0x54, 0xf4, 0x3a, 0x5b, 0x3c, 0x22,
	0xcb, 0xce, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xdc, 0x0f, 0x06, 0xd1, 0x0e, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DrinkFactoryClient is the client API for DrinkFactory service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DrinkFactoryClient interface {
	GetDrinkByID(ctx context.Context, in *DrinkResponse, opts ...grpc.CallOption) (*DrinkReply, error)
}

type drinkFactoryClient struct {
	cc grpc.ClientConnInterface
}

func NewDrinkFactoryClient(cc grpc.ClientConnInterface) DrinkFactoryClient {
	return &drinkFactoryClient{cc}
}

func (c *drinkFactoryClient) GetDrinkByID(ctx context.Context, in *DrinkResponse, opts ...grpc.CallOption) (*DrinkReply, error) {
	out := new(DrinkReply)
	err := c.cc.Invoke(ctx, "/proto.DrinkFactory/GetDrinkByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DrinkFactoryServer is the server API for DrinkFactory service.
type DrinkFactoryServer interface {
	GetDrinkByID(context.Context, *DrinkResponse) (*DrinkReply, error)
}

// UnimplementedDrinkFactoryServer can be embedded to have forward compatible implementations.
type UnimplementedDrinkFactoryServer struct {
}

func (*UnimplementedDrinkFactoryServer) GetDrinkByID(ctx context.Context, req *DrinkResponse) (*DrinkReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDrinkByID not implemented")
}

func RegisterDrinkFactoryServer(s *grpc.Server, srv DrinkFactoryServer) {
	s.RegisterService(&_DrinkFactory_serviceDesc, srv)
}

func _DrinkFactory_GetDrinkByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DrinkResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DrinkFactoryServer).GetDrinkByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DrinkFactory/GetDrinkByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DrinkFactoryServer).GetDrinkByID(ctx, req.(*DrinkResponse))
	}
	return interceptor(ctx, in, info, handler)
}

var _DrinkFactory_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.DrinkFactory",
	HandlerType: (*DrinkFactoryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDrinkByID",
			Handler:    _DrinkFactory_GetDrinkByID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "drink-factory.proto",
}
